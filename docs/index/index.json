{"interfaceLanguages":{"swift":[{"children":[{"title":"Classes","type":"groupMarker"},{"children":[{"title":"Initializer","type":"groupMarker"},{"path":"\/documentation\/swiftio\/analogin\/init(_:)","title":"init(IdName)","type":"init"},{"title":"Reading input","type":"groupMarker"},{"path":"\/documentation\/swiftio\/analogin\/read()","title":"func read() -> Int","type":"method"},{"path":"\/documentation\/swiftio\/analogin\/readpercentage()","title":"func readPercentage() -> Float","type":"method"},{"path":"\/documentation\/swiftio\/analogin\/readrawvalue()","title":"func readRawValue() -> Int","type":"method"},{"path":"\/documentation\/swiftio\/analogin\/readvoltage()","title":"func readVoltage() -> Float","type":"method"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/analogin\/maxrawvalue","title":"var maxRawValue: Int","type":"property"},{"path":"\/documentation\/swiftio\/analogin\/refvoltage","title":"var refVoltage: Float","type":"property"},{"path":"\/documentation\/swiftio\/analogin\/resolutionbits","title":"var resolutionBits: Int","type":"property"}],"path":"\/documentation\/swiftio\/analogin","title":"AnalogIn","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftio\/counter\/init(_:mode:period:)","title":"init(IdName, mode: Counter.Mode, period: UInt64)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/counter\/counterfrequency","title":"let counterFrequency: UInt32","type":"property"},{"path":"\/documentation\/swiftio\/counter\/maxcountmicroseconds","title":"let maxCountMicroseconds: UInt64","type":"property"},{"path":"\/documentation\/swiftio\/counter\/maxcountticks","title":"let maxCountTicks: UInt32","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftio\/counter\/getticks()","title":"func getTicks() -> Result<UInt32, Errno>","type":"method"},{"path":"\/documentation\/swiftio\/counter\/getticks(from:)","title":"func getTicks(from: UInt64) -> UInt32","type":"method"},{"path":"\/documentation\/swiftio\/counter\/setinterrupt(start:_:)","title":"func setInterrupt(start: Bool, (UInt32) -> Void)","type":"method"},{"path":"\/documentation\/swiftio\/counter\/start(mode:period:)","title":"func start(mode: Counter.Mode?, period: UInt64?)","type":"method"},{"path":"\/documentation\/swiftio\/counter\/stop()","title":"func stop()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftio\/counter\/mode\/oneshot","title":"case oneShot","type":"case"},{"path":"\/documentation\/swiftio\/counter\/mode\/period","title":"case period","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftio\/counter\/mode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftio\/counter\/mode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftio\/counter\/mode","title":"Counter.Mode","type":"enum"}],"path":"\/documentation\/swiftio\/counter","title":"Counter","type":"class"},{"children":[{"title":"Initializer","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalin\/init(_:mode:)","title":"init(IdName, mode: DigitalIn.Mode)","type":"init"},{"title":"Reading input","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalin\/read()","title":"func read() -> Bool","type":"method"},{"title":"Configuring input mode","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalin\/setmode(_:)","title":"func setMode(DigitalIn.Mode) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/digitalin\/getmode()","title":"func getMode() -> DigitalIn.Mode","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalin\/mode-swift.enum\/pulldown","title":"case pullDown","type":"case"},{"path":"\/documentation\/swiftio\/digitalin\/mode-swift.enum\/pullnone","title":"case pullNone","type":"case"},{"path":"\/documentation\/swiftio\/digitalin\/mode-swift.enum\/pullup","title":"case pullUp","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalin\/mode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftio\/digitalin\/mode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftio\/digitalin\/mode-swift.enum","title":"DigitalIn.Mode","type":"enum"},{"title":"Configuring interrupt","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalin\/setinterrupt(_:enable:callback:)","title":"func setInterrupt(DigitalIn.InterruptMode, enable: Bool, callback: () -> Void) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/digitalin\/enableinterrupt()","title":"func enableInterrupt() -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/digitalin\/disableinterrupt()","title":"func disableInterrupt() -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/digitalin\/removeinterrupt()","title":"func removeInterrupt() -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/digitalin\/getinterruptstate()","title":"func getInterruptState() -> DigitalIn.InterruptState","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalin\/interruptmode-swift.enum\/bothedge","title":"case bothEdge","type":"case"},{"path":"\/documentation\/swiftio\/digitalin\/interruptmode-swift.enum\/falling","title":"case falling","type":"case"},{"path":"\/documentation\/swiftio\/digitalin\/interruptmode-swift.enum\/rising","title":"case rising","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalin\/interruptmode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftio\/digitalin\/interruptmode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftio\/digitalin\/interruptmode-swift.enum","title":"DigitalIn.InterruptMode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalin\/interruptstate\/disable","title":"case disable","type":"case"},{"path":"\/documentation\/swiftio\/digitalin\/interruptstate\/enable","title":"case enable","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalin\/interruptstate\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftio\/digitalin\/interruptstate\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftio\/digitalin\/interruptstate","title":"DigitalIn.InterruptState","type":"enum"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalin\/interruptmode-swift.property","title":"var interruptMode: DigitalIn.InterruptMode","type":"property"},{"path":"\/documentation\/swiftio\/digitalin\/mode-swift.property","title":"var mode: DigitalIn.Mode","type":"property"}],"path":"\/documentation\/swiftio\/digitalin","title":"DigitalIn","type":"class"},{"children":[{"title":"Initializer","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalinout\/init(_:direction:outputmode:inputmode:outputvalue:)","title":"init(IdName, direction: DigitalInOut.Direction, outputMode: DigitalOut.Mode, inputMode: DigitalIn.Mode, outputValue: Bool)","type":"init"},{"title":"Setting input","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalinout\/settoinput(_:)","title":"func setToInput(DigitalIn.Mode?) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/digitalinout\/read()","title":"func read() -> Bool","type":"method"},{"title":"Setting output","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalinout\/settooutput(_:value:)","title":"func setToOutput(DigitalOut.Mode?, value: Bool?) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/digitalinout\/write(_:)","title":"func write(Bool)","type":"method"},{"path":"\/documentation\/swiftio\/digitalinout\/high()","title":"func high()","type":"method"},{"path":"\/documentation\/swiftio\/digitalinout\/low()","title":"func low()","type":"method"},{"title":"Configuring pins","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalinout\/getdirection()","title":"func getDirection() -> DigitalInOut.Direction","type":"method"},{"path":"\/documentation\/swiftio\/digitalinout\/getinputmode()","title":"func getInputMode() -> DigitalIn.Mode","type":"method"},{"path":"\/documentation\/swiftio\/digitalinout\/getoutputmode()","title":"func getOutputMode() -> DigitalOut.Mode","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalinout\/direction-swift.enum\/input","title":"case input","type":"case"},{"path":"\/documentation\/swiftio\/digitalinout\/direction-swift.enum\/output","title":"case output","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalinout\/direction-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftio\/digitalinout\/direction-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftio\/digitalinout\/direction-swift.enum","title":"DigitalInOut.Direction","type":"enum"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalinout\/direction-swift.property","title":"var direction: DigitalInOut.Direction","type":"property"},{"path":"\/documentation\/swiftio\/digitalinout\/inputmode","title":"var inputMode: DigitalIn.Mode","type":"property"},{"path":"\/documentation\/swiftio\/digitalinout\/outputmode","title":"var outputMode: DigitalOut.Mode","type":"property"}],"path":"\/documentation\/swiftio\/digitalinout","title":"DigitalInOut","type":"class"},{"children":[{"title":"Initializer","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalout\/init(_:mode:value:)","title":"init(IdName, mode: DigitalOut.Mode, value: Bool)","type":"init"},{"title":"Setting output","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalout\/write(_:)","title":"func write(Bool)","type":"method"},{"path":"\/documentation\/swiftio\/digitalout\/high()","title":"func high()","type":"method"},{"path":"\/documentation\/swiftio\/digitalout\/low()","title":"func low()","type":"method"},{"path":"\/documentation\/swiftio\/digitalout\/toggle()","title":"func toggle()","type":"method"},{"path":"\/documentation\/swiftio\/digitalout\/getvalue()","title":"func getValue() -> Bool","type":"method"},{"title":"Configuring output mode","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalout\/setmode(_:)","title":"func setMode(DigitalOut.Mode) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/digitalout\/getmode()","title":"func getMode() -> DigitalOut.Mode","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalout\/mode-swift.enum\/opendrain","title":"case openDrain","type":"case"},{"path":"\/documentation\/swiftio\/digitalout\/mode-swift.enum\/pushpull","title":"case pushPull","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalout\/mode-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftio\/digitalout\/mode-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftio\/digitalout\/mode-swift.enum","title":"DigitalOut.Mode","type":"enum"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/digitalout\/mode-swift.property","title":"var mode: DigitalOut.Mode","type":"property"},{"path":"\/documentation\/swiftio\/digitalout\/value","title":"var value: Bool","type":"property"}],"path":"\/documentation\/swiftio\/digitalout","title":"DigitalOut","type":"class"},{"children":[{"title":"Type Aliases","type":"groupMarker"},{"path":"\/documentation\/swiftio\/ethernet\/ethernetrxhandler","title":"Ethernet.EthernetRxHandler","type":"typealias"},{"path":"\/documentation\/swiftio\/ethernet\/ethernettxhandler","title":"Ethernet.EthernetTxHandler","type":"typealias"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/ethernet\/rxhandler","title":"static let rxHandler: Ethernet.EthernetRxHandler","type":"property"},{"title":"Type Methods","type":"groupMarker"},{"path":"\/documentation\/swiftio\/ethernet\/down()","title":"static func down()","type":"method"},{"path":"\/documentation\/swiftio\/ethernet\/setup(mac:txhandler:)","title":"static func setup(mac: [UInt8], txHandler: (UnsafePointer<UInt8>?, Int32) -> Int32)","type":"method"},{"path":"\/documentation\/swiftio\/ethernet\/up()","title":"static func up()","type":"method"}],"path":"\/documentation\/swiftio\/ethernet","title":"Ethernet","type":"class"},{"children":[{"title":"Initializer","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2c\/init(_:speed:)","title":"init(IdName, speed: I2C.Speed)","type":"init"},{"title":"Reading data","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2c\/read(into:from:)","title":"func read(into: inout UInt8, from: UInt8) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/i2c\/read(into:count:from:)","title":"func read(into: inout [UInt8], count: Int?, from: UInt8) -> Result<(), Errno>","type":"method"},{"title":"Writing data","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2c\/write(_:to:)","title":"func write(UInt8, to: UInt8) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/i2c\/write(_:count:to:)","title":"func write([UInt8], count: Int?, to: UInt8) -> Result<(), Errno>","type":"method"},{"title":"Writing and reading data","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2c\/writeread(_:into:address:)","title":"func writeRead(UInt8, into: inout UInt8, address: UInt8) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/i2c\/writeread(_:into:readcount:address:)","title":"func writeRead(UInt8, into: inout [UInt8], readCount: Int?, address: UInt8) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/i2c\/writeread(_:writecount:into:readcount:address:)","title":"func writeRead([UInt8], writeCount: Int?, into: inout [UInt8], readCount: Int?, address: UInt8) -> Result<(), Errno>","type":"method"},{"title":"Setting speed","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2c\/setspeed(_:)","title":"func setSpeed(I2C.Speed) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/i2c\/getspeed()","title":"func getSpeed() -> I2C.Speed","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2c\/speed\/fast","title":"case fast","type":"case"},{"path":"\/documentation\/swiftio\/i2c\/speed\/fastplus","title":"case fastPlus","type":"case"},{"path":"\/documentation\/swiftio\/i2c\/speed\/standard","title":"case standard","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2c\/speed\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftio\/i2c\/speed\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftio\/i2c\/speed","title":"I2C.Speed","type":"enum"}],"path":"\/documentation\/swiftio\/i2c","title":"I2C","type":"class"},{"children":[{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/init(rawvalue:)","title":"init(rawValue: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/rawvalue","title":"let rawValue: Int32","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftio\/i2s\/configoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftio\/i2s\/configoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/configoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftio\/i2s\/configoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftio\/i2s\/configoptions","title":"I2S.ConfigOptions","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/init(rawvalue:)","title":"init(rawValue: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/rawvalue","title":"let rawValue: Int32","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftio\/i2s\/dataformat\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftio\/i2s\/dataformat\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/dataformat\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftio\/i2s\/dataformat\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftio\/i2s\/dataformat","title":"I2S.DataFormat","type":"struct"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/init(_:rate:bits:mode:timeout:)","title":"init(IdName, rate: Int, bits: Int, mode: I2S.Mode, timeout: Int)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/supportedsamplebits","title":"let supportedSampleBits: Set<Int>","type":"property"},{"path":"\/documentation\/swiftio\/i2s\/supportedsamplerate","title":"let supportedSampleRate: Set<Int>","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/setsampleproperty(rate:bits:)","title":"func setSampleProperty(rate: Int, bits: Int) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/write(_:count:)-14amd","title":"func write([UInt8], count: Int?) -> Result<Int, Errno>","type":"method"},{"path":"\/documentation\/swiftio\/i2s\/write(_:count:)-6vuic","title":"func write<Element>([Element], count: Int?) -> Result<Int, Errno>","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/direction\/both","title":"case both","type":"case"},{"path":"\/documentation\/swiftio\/i2s\/direction\/rx","title":"case rx","type":"case"},{"path":"\/documentation\/swiftio\/i2s\/direction\/tx","title":"case tx","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/direction\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftio\/i2s\/direction\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftio\/i2s\/direction","title":"I2S.Direction","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/mode\/leftjustified","title":"case leftJustified","type":"case"},{"path":"\/documentation\/swiftio\/i2s\/mode\/philips","title":"case philips","type":"case"},{"path":"\/documentation\/swiftio\/i2s\/mode\/rightjustified","title":"case rightJustified","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/mode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftio\/i2s\/mode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftio\/i2s\/mode","title":"I2S.Mode","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/state\/error","title":"case error","type":"case"},{"path":"\/documentation\/swiftio\/i2s\/state\/notready","title":"case notReady","type":"case"},{"path":"\/documentation\/swiftio\/i2s\/state\/ready","title":"case ready","type":"case"},{"path":"\/documentation\/swiftio\/i2s\/state\/running","title":"case running","type":"case"},{"path":"\/documentation\/swiftio\/i2s\/state\/stopping","title":"case stopping","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/state\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftio\/i2s\/state\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftio\/i2s\/state","title":"I2S.State","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/trigger\/drain","title":"case drain","type":"case"},{"path":"\/documentation\/swiftio\/i2s\/trigger\/drop","title":"case drop","type":"case"},{"path":"\/documentation\/swiftio\/i2s\/trigger\/prepare","title":"case prepare","type":"case"},{"path":"\/documentation\/swiftio\/i2s\/trigger\/start","title":"case start","type":"case"},{"path":"\/documentation\/swiftio\/i2s\/trigger\/stop","title":"case stop","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftio\/i2s\/trigger\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftio\/i2s\/trigger\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftio\/i2s\/trigger","title":"I2S.Trigger","type":"enum"}],"path":"\/documentation\/swiftio\/i2s","title":"I2S","type":"class"},{"children":[{"title":"Initializer","type":"groupMarker"},{"path":"\/documentation\/swiftio\/pwmout\/init(_:frequency:dutycycle:)","title":"init(IdName, frequency: Int, dutycycle: Float)","type":"init"},{"title":"Setting PWM","type":"groupMarker"},{"path":"\/documentation\/swiftio\/pwmout\/set(frequency:dutycycle:)","title":"func set(frequency: Int, dutycycle: Float)","type":"method"},{"path":"\/documentation\/swiftio\/pwmout\/set(period:pulse:)","title":"func set(period: Int, pulse: Int)","type":"method"},{"path":"\/documentation\/swiftio\/pwmout\/setdutycycle(_:)","title":"func setDutycycle(Float)","type":"method"},{"path":"\/documentation\/swiftio\/pwmout\/suspend()","title":"func suspend()","type":"method"},{"path":"\/documentation\/swiftio\/pwmout\/resume()","title":"func resume()","type":"method"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/pwmout\/maxfrequency","title":"var maxFrequency: Int","type":"property"},{"path":"\/documentation\/swiftio\/pwmout\/minfrequency","title":"var minFrequency: Int","type":"property"}],"path":"\/documentation\/swiftio\/pwmout","title":"PWMOut","type":"class"},{"children":[{"title":"Initializer","type":"groupMarker"},{"path":"\/documentation\/swiftio\/spi\/init(_:speed:cspin:cpol:cpha:bitorder:)","title":"init(IdName, speed: Int, csPin: DigitalOut?, CPOL: Bool, CPHA: Bool, bitOrder: SPI.BitOrder)","type":"init"},{"title":"Reading data","type":"groupMarker"},{"path":"\/documentation\/swiftio\/spi\/read(into:)","title":"func read(into: inout UInt8) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/spi\/read(into:count:)-8i18b","title":"func read(into: inout [UInt8], count: Int?) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/spi\/read(into:count:)-227i3","title":"func read<Element>(into: inout [Element], count: Int?) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/spi\/read(into:count:)-mhbj","title":"func read(into: UnsafeMutableRawBufferPointer, count: Int?) -> Result<(), Errno>","type":"method"},{"title":"Writing data","type":"groupMarker"},{"path":"\/documentation\/swiftio\/spi\/write(_:)","title":"func write(UInt8) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/spi\/write(_:count:)-x9v4","title":"func write([UInt8], count: Int?) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/spi\/write(_:count:)-9wh8x","title":"func write<Element>([Element], count: Int?) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/spi\/write(_:count:)-8007q","title":"func write(UnsafeRawBufferPointer, count: Int?) -> Result<(), Errno>","type":"method"},{"title":"Writing and reading data","type":"groupMarker"},{"path":"\/documentation\/swiftio\/spi\/transceive(_:into:readcount:)","title":"func transceive(UInt8, into: inout [UInt8], readCount: Int?) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/spi\/transceive(_:writecount:into:readcount:)","title":"func transceive([UInt8], writeCount: Int?, into: inout [UInt8], readCount: Int?) -> Result<(), Errno>","type":"method"},{"title":"Configuring SPI","type":"groupMarker"},{"path":"\/documentation\/swiftio\/spi\/getspeed()","title":"func getSpeed() -> Int","type":"method"},{"path":"\/documentation\/swiftio\/spi\/getmode()","title":"func getMode() -> (CPOL: Bool, CPHA: Bool, bitOrder: SPI.BitOrder)","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftio\/spi\/bitorder-swift.enum\/lsb","title":"case LSB","type":"case"},{"path":"\/documentation\/swiftio\/spi\/bitorder-swift.enum\/msb","title":"case MSB","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftio\/spi\/bitorder-swift.enum\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftio\/spi\/bitorder-swift.enum\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftio\/spi\/bitorder-swift.enum","title":"SPI.BitOrder","type":"enum"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/spi\/cpha","title":"var CPHA: Bool","type":"property"},{"path":"\/documentation\/swiftio\/spi\/cpol","title":"var CPOL: Bool","type":"property"},{"path":"\/documentation\/swiftio\/spi\/lsb","title":"var LSB: Bool","type":"property"},{"path":"\/documentation\/swiftio\/spi\/msb","title":"var MSB: Bool","type":"property"},{"path":"\/documentation\/swiftio\/spi\/bitorder-swift.property","title":"var bitOrder: SPI.BitOrder","type":"property"},{"path":"\/documentation\/swiftio\/spi\/cs","title":"var cs: Bool","type":"property"},{"path":"\/documentation\/swiftio\/spi\/speed","title":"var speed: Int","type":"property"}],"path":"\/documentation\/swiftio\/spi","title":"SPI","type":"class"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftio\/timer\/init(mode:period:)","title":"init(mode: Timer.Mode, period: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftio\/timer\/getremaining()","title":"func getRemaining() -> UInt32","type":"method"},{"path":"\/documentation\/swiftio\/timer\/getstatus()","title":"func getStatus() -> UInt32","type":"method"},{"path":"\/documentation\/swiftio\/timer\/setinterrupt(start:_:)","title":"func setInterrupt(start: Bool, () -> Void)","type":"method"},{"path":"\/documentation\/swiftio\/timer\/start(mode:period:)","title":"func start(mode: Timer.Mode?, period: Int?)","type":"method"},{"path":"\/documentation\/swiftio\/timer\/stop()","title":"func stop()","type":"method"},{"title":"Enumerations","type":"groupMarker"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftio\/timer\/mode\/oneshot","title":"case oneShot","type":"case"},{"path":"\/documentation\/swiftio\/timer\/mode\/period","title":"case period","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftio\/timer\/mode\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftio\/timer\/mode\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftio\/timer\/mode","title":"Timer.Mode","type":"enum"}],"path":"\/documentation\/swiftio\/timer","title":"Timer","type":"class"},{"children":[{"title":"Initializer","type":"groupMarker"},{"path":"\/documentation\/swiftio\/uart\/init(_:baudrate:parity:stopbits:databits:readbufferlength:)","title":"init(IdName, baudRate: Int, parity: UART.Parity, stopBits: UART.StopBits, dataBits: UART.DataBits, readBufferLength: Int)","type":"init"},{"title":"Reading data","type":"groupMarker"},{"path":"\/documentation\/swiftio\/uart\/read(into:timeout:)","title":"func read(into: inout UInt8, timeout: Int?) -> Result<Int, Errno>","type":"method"},{"path":"\/documentation\/swiftio\/uart\/read(into:count:timeout:)-8km7p","title":"func read(into: inout [UInt8], count: Int?, timeout: Int?) -> Result<Int, Errno>","type":"method"},{"path":"\/documentation\/swiftio\/uart\/read(into:count:timeout:)-2z2uc","title":"func read(into: UnsafeMutableRawBufferPointer, count: Int?, timeout: Int?) -> Result<Int, Errno>","type":"method"},{"title":"Writing data","type":"groupMarker"},{"path":"\/documentation\/swiftio\/uart\/write(_:)-6brso","title":"func write(UInt8) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/uart\/write(_:)-97rer","title":"func write(String) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/uart\/write(_:count:)-7uzjn","title":"func write([UInt8], count: Int?) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/uart\/write(_:count:)-4fol4","title":"func write(UnsafeRawBufferPointer, count: Int?) -> Result<(), Errno>","type":"method"},{"title":"Configuring UART","type":"groupMarker"},{"path":"\/documentation\/swiftio\/uart\/setbaudrate(_:)","title":"func setBaudRate(Int) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/uart\/getbaudrate()","title":"func getBaudRate() -> Int","type":"method"},{"path":"\/documentation\/swiftio\/uart\/checkbufferreceived()","title":"func checkBufferReceived() -> Int","type":"method"},{"path":"\/documentation\/swiftio\/uart\/clearbuffer()","title":"func clearBuffer() -> Result<(), Errno>","type":"method"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftio\/uart\/databits\/eightbits","title":"case eightBits","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftio\/uart\/databits\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftio\/uart\/databits\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftio\/uart\/databits","title":"UART.DataBits","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftio\/uart\/parity\/even","title":"case even","type":"case"},{"path":"\/documentation\/swiftio\/uart\/parity\/none","title":"case none","type":"case"},{"path":"\/documentation\/swiftio\/uart\/parity\/odd","title":"case odd","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftio\/uart\/parity\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftio\/uart\/parity\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftio\/uart\/parity","title":"UART.Parity","type":"enum"},{"children":[{"title":"Enumeration Cases","type":"groupMarker"},{"path":"\/documentation\/swiftio\/uart\/stopbits\/onebit","title":"case oneBit","type":"case"},{"path":"\/documentation\/swiftio\/uart\/stopbits\/twobits","title":"case twoBits","type":"case"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftio\/uart\/stopbits\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftio\/uart\/stopbits\/equatable-implementations","title":"Equatable Implementations","type":"symbol"}],"path":"\/documentation\/swiftio\/uart\/stopbits","title":"UART.StopBits","type":"enum"}],"path":"\/documentation\/swiftio\/uart","title":"UART","type":"class"},{"title":"Protocols","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/idname\/value","title":"var value: Int32","type":"property"}],"path":"\/documentation\/swiftio\/idname","title":"IdName","type":"protocol"},{"title":"Structures","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftio\/errno\/~=(_:_:)","title":"static func ~= (Errno, Error) -> Bool","type":"op"},{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftio\/errno\/init(_:)-5utcb","title":"init(CInt)","type":"init"},{"path":"\/documentation\/swiftio\/errno\/init(_:)-9f5dk","title":"init(Int)","type":"init"},{"path":"\/documentation\/swiftio\/errno\/init(rawvalue:)","title":"init(rawValue: CInt)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/errno\/rawvalue","title":"let rawValue: CInt","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/errno\/addressfamilynotsupported","title":"static var addressFamilyNotSupported: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/addressinuse","title":"static var addressInUse: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/addressnotavailable","title":"static var addressNotAvailable: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/addressrequired","title":"static var addressRequired: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/alreadyinprocess","title":"static var alreadyInProcess: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/arglisttoolong","title":"static var argListTooLong: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/badaddress","title":"static var badAddress: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/badfiledescriptor","title":"static var badFileDescriptor: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/badmessage","title":"static var badMessage: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/brokenpipe","title":"static var brokenPipe: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/canceled","title":"static var canceled: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/connectionabort","title":"static var connectionAbort: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/connectionrefused","title":"static var connectionRefused: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/connectionreset","title":"static var connectionReset: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/deadlock","title":"static var deadlock: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/directorynotempty","title":"static var directoryNotEmpty: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/execformaterror","title":"static var execFormatError: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/fileexists","title":"static var fileExists: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/filenametoolong","title":"static var fileNameTooLong: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/filetoolarge","title":"static var fileTooLarge: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/hostisdown","title":"static var hostIsDown: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/illegalbytesequence","title":"static var illegalByteSequence: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/illegalseek","title":"static var illegalSeek: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/improperlink","title":"static var improperLink: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/inappropriateioctlfordevice","title":"static var inappropriateIOCTLForDevice: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/interrupted","title":"static var interrupted: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/invalidargument","title":"static var invalidArgument: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/ioerror","title":"static var ioError: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/isdirectory","title":"static var isDirectory: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/messagetoolong","title":"static var messageTooLong: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/networkdown","title":"static var networkDown: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/networkreset","title":"static var networkReset: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/networkunreachable","title":"static var networkUnreachable: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/nobufferspace","title":"static var noBufferSpace: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/nochildprocess","title":"static var noChildProcess: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/nodata","title":"static var noData: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/nofunction","title":"static var noFunction: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/nolocks","title":"static var noLocks: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/nomemory","title":"static var noMemory: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/noroutetohost","title":"static var noRouteToHost: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/nospace","title":"static var noSpace: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/nostreamresources","title":"static var noStreamResources: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/nosuchaddressordevice","title":"static var noSuchAddressOrDevice: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/nosuchfileordirectory","title":"static var noSuchFileOrDirectory: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/nosuchprocess","title":"static var noSuchProcess: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/notdirectory","title":"static var notDirectory: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/notpermitted","title":"static var notPermitted: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/notsocket","title":"static var notSocket: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/notstream","title":"static var notStream: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/notsupported","title":"static var notSupported: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/notsupportedonsocket","title":"static var notSupportedOnSocket: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/nowinprogress","title":"static var nowInProgress: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/operationnotsupportedbydevice","title":"static var operationNotSupportedByDevice: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/outofdomain","title":"static var outOfDomain: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/outofrange","title":"static var outOfRange: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/permissiondenied","title":"static var permissionDenied: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/protocolerror","title":"static var protocolError: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/protocolfamilynotsupported","title":"static var protocolFamilyNotSupported: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/protocolnotavailable","title":"static var protocolNotAvailable: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/protocolnotsupported","title":"static var protocolNotSupported: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/protocolwrongtypeforsocket","title":"static var protocolWrongTypeForSocket: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/readonlyfilesystem","title":"static var readOnlyFileSystem: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/resourcebusy","title":"static var resourceBusy: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/resourcetemporarilyunavailable","title":"static var resourceTemporarilyUnavailable: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/socketisconnected","title":"static var socketIsConnected: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/socketnotconnected","title":"static var socketNotConnected: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/textfilebusy","title":"static var textFileBusy: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/timedout","title":"static var timedOut: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/timeout","title":"static var timeout: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/toomanylinks","title":"static var tooManyLinks: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/toomanyopenfiles","title":"static var tooManyOpenFiles: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/toomanyopenfilesinsystem","title":"static var tooManyOpenFilesInSystem: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/toomanysymboliclinklevels","title":"static var tooManySymbolicLinkLevels: Errno","type":"property"},{"path":"\/documentation\/swiftio\/errno\/wouldblock","title":"static var wouldBlock: Errno","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/errno\/debugdescription","title":"var debugDescription: String","type":"property"}],"path":"\/documentation\/swiftio\/errno\/customdebugstringconvertible-implementations","title":"CustomDebugStringConvertible Implementations","type":"symbol"},{"children":[{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/errno\/description","title":"var description: String","type":"property"}],"path":"\/documentation\/swiftio\/errno\/customstringconvertible-implementations","title":"CustomStringConvertible Implementations","type":"symbol"}],"path":"\/documentation\/swiftio\/errno","title":"Errno","type":"struct"},{"children":[{"title":"Opening a File","type":"groupMarker"},{"path":"\/documentation\/swiftio\/filedescriptor\/open(_:_:options:)","title":"static func open(String, FileDescriptor.AccessMode, options: FileDescriptor.OpenOptions) throws -> FileDescriptor","type":"method"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftio\/filedescriptor\/accessmode\/init(rawvalue:)","title":"init(rawValue: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/filedescriptor\/accessmode\/rawvalue","title":"var rawValue: UInt8","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/filedescriptor\/accessmode\/readonly","title":"static var readOnly: FileDescriptor.AccessMode","type":"property"},{"path":"\/documentation\/swiftio\/filedescriptor\/accessmode\/readwrite","title":"static var readWrite: FileDescriptor.AccessMode","type":"property"},{"path":"\/documentation\/swiftio\/filedescriptor\/accessmode\/writeonly","title":"static var writeOnly: FileDescriptor.AccessMode","type":"property"}],"path":"\/documentation\/swiftio\/filedescriptor\/accessmode","title":"FileDescriptor.AccessMode","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/init(rawvalue:)","title":"init(rawValue: UInt8)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/rawvalue","title":"var rawValue: UInt8","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/append","title":"static var append: FileDescriptor.OpenOptions","type":"property"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/create","title":"static var create: FileDescriptor.OpenOptions","type":"property"},{"title":"Default Implementations","type":"groupMarker"},{"children":[{"title":"Operators","type":"groupMarker"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/!=(_:_:)","title":"static func != (Self, Self) -> Bool","type":"op"}],"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/equatable-implementations","title":"Equatable Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/contains(_:)","title":"func contains(Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/formintersection(_:)","title":"func formIntersection(Self)","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/formsymmetricdifference(_:)","title":"func formSymmetricDifference(Self)","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/formunion(_:)","title":"func formUnion(Self)","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/insert(_:)","title":"func insert(Self.Element) -> (inserted: Bool, memberAfterInsert: Self.Element)","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/intersection(_:)","title":"func intersection(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/remove(_:)","title":"func remove(Self.Element) -> Self.Element?","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/symmetricdifference(_:)","title":"func symmetricDifference(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/union(_:)","title":"func union(Self) -> Self","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/update(with:)","title":"func update(with: Self.Element) -> Self.Element?","type":"method"}],"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/optionset-implementations","title":"OptionSet Implementations","type":"symbol"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/init(_:)","title":"init<S>(S)","type":"init"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/init(arrayliteral:)","title":"init(arrayLiteral: Self.Element...)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/isempty","title":"var isEmpty: Bool","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/isdisjoint(with:)","title":"func isDisjoint(with: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/isstrictsubset(of:)","title":"func isStrictSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/isstrictsuperset(of:)","title":"func isStrictSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/issubset(of:)","title":"func isSubset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/issuperset(of:)","title":"func isSuperset(of: Self) -> Bool","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/subtract(_:)","title":"func subtract(Self)","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/subtracting(_:)","title":"func subtracting(Self) -> Self","type":"method"}],"path":"\/documentation\/swiftio\/filedescriptor\/openoptions\/setalgebra-implementations","title":"SetAlgebra Implementations","type":"symbol"}],"path":"\/documentation\/swiftio\/filedescriptor\/openoptions","title":"FileDescriptor.OpenOptions","type":"struct"},{"title":"Reading from a file","type":"groupMarker"},{"path":"\/documentation\/swiftio\/filedescriptor\/read(into:count:)-1e6cm","title":"func read(into: inout [UInt8], count: Int?) throws -> Int","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/read(into:count:)-3x3lj","title":"func read(into: UnsafeMutableRawBufferPointer, count: Int?) throws -> Int","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/read(fromabsoluteoffest:into:count:)-6abp2","title":"func read(fromAbsoluteOffest: Int, into: inout [UInt8], count: Int?) throws -> Int","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/read(fromabsoluteoffest:into:count:)-k2ts","title":"func read(fromAbsoluteOffest: Int, into: UnsafeMutableRawBufferPointer, count: Int?) throws -> Int","type":"method"},{"title":"Writing to a file","type":"groupMarker"},{"path":"\/documentation\/swiftio\/filedescriptor\/write(_:)","title":"func write(String) throws -> Int","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/write(_:count:)-8l97n","title":"func write([UInt8], count: Int?) throws -> Int","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/write(_:count:)-2p42a","title":"func write(UnsafeRawBufferPointer, count: Int?) throws -> Int","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/write(toabsoluteoffset:_:count:)-42r4g","title":"func write(toAbsoluteOffset: Int, [UInt8], count: Int?) throws -> Int","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/write(toabsoluteoffset:_:count:)-7r2v8","title":"func write(toAbsoluteOffset: Int, UnsafeRawBufferPointer, count: Int?) throws -> Int","type":"method"},{"title":"Closing a File","type":"groupMarker"},{"path":"\/documentation\/swiftio\/filedescriptor\/close()","title":"func close() throws","type":"method"},{"title":"Changing a File’s Offset","type":"groupMarker"},{"path":"\/documentation\/swiftio\/filedescriptor\/seek(offset:from:)","title":"func seek(offset: Int, from: FileDescriptor.SeekOrigin) throws -> Int","type":"method"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftio\/filedescriptor\/seekorigin\/init(rawvalue:)","title":"init(rawValue: Int32)","type":"init"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/filedescriptor\/seekorigin\/rawvalue","title":"var rawValue: Int32","type":"property"},{"title":"Type Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/filedescriptor\/seekorigin\/current","title":"static var current: FileDescriptor.SeekOrigin","type":"property"},{"path":"\/documentation\/swiftio\/filedescriptor\/seekorigin\/end","title":"static var end: FileDescriptor.SeekOrigin","type":"property"},{"path":"\/documentation\/swiftio\/filedescriptor\/seekorigin\/start","title":"static var start: FileDescriptor.SeekOrigin","type":"property"}],"path":"\/documentation\/swiftio\/filedescriptor\/seekorigin","title":"FileDescriptor.SeekOrigin","type":"struct"},{"title":"Instance Properties","type":"groupMarker"},{"path":"\/documentation\/swiftio\/filedescriptor\/size","title":"var size: Int","type":"property"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftio\/filedescriptor\/sync()","title":"func sync() throws","type":"method"},{"path":"\/documentation\/swiftio\/filedescriptor\/tell()","title":"func tell() throws -> Int","type":"method"}],"path":"\/documentation\/swiftio\/filedescriptor","title":"FileDescriptor","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftio\/messagequeue\/init(maxmessagebytes:maxmessagecount:)","title":"init(maxMessageBytes: Int, maxMessageCount: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftio\/messagequeue\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/swiftio\/messagequeue\/purge()","title":"func purge()","type":"method"},{"path":"\/documentation\/swiftio\/messagequeue\/receive(into:timeout:)","title":"func receive(into: UnsafeMutableRawPointer, timeout: Int) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/messagequeue\/send(data:timeout:)","title":"func send(data: UnsafeRawPointer, timeout: Int) -> Result<(), Errno>","type":"method"}],"path":"\/documentation\/swiftio\/messagequeue","title":"MessageQueue","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftio\/mutex\/init()","title":"init()","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftio\/mutex\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/swiftio\/mutex\/lock(_:)","title":"func lock(Int) -> Result<(), Errno>","type":"method"},{"path":"\/documentation\/swiftio\/mutex\/unlock()","title":"func unlock() -> Result<(), Errno>","type":"method"}],"path":"\/documentation\/swiftio\/mutex","title":"Mutex","type":"struct"},{"children":[{"title":"Initializers","type":"groupMarker"},{"path":"\/documentation\/swiftio\/semaphore\/init(initialcount:maxcount:)","title":"init(initialCount: Int, maxCount: Int)","type":"init"},{"title":"Instance Methods","type":"groupMarker"},{"path":"\/documentation\/swiftio\/semaphore\/destroy()","title":"func destroy()","type":"method"},{"path":"\/documentation\/swiftio\/semaphore\/give()","title":"func give()","type":"method"},{"path":"\/documentation\/swiftio\/semaphore\/reset()","title":"func reset()","type":"method"},{"path":"\/documentation\/swiftio\/semaphore\/take(_:)","title":"func take(Int) -> Result<(), Errno>","type":"method"}],"path":"\/documentation\/swiftio\/semaphore","title":"Semaphore","type":"struct"},{"title":"Functions","type":"groupMarker"},{"path":"\/documentation\/swiftio\/createthread(name:priority:stacksize:_:)","title":"func createThread(name: String, priority: Int, stackSize: Int, swifthal_task)","type":"func"},{"path":"\/documentation\/swiftio\/cyclestonanoseconds(start:stop:)","title":"func cyclesToNanoseconds(start: UInt, stop: UInt) -> Int64","type":"func"},{"path":"\/documentation\/swiftio\/getclockcycle()","title":"func getClockCycle() -> UInt","type":"func"},{"path":"\/documentation\/swiftio\/getsystemuptimeinmilliseconds()","title":"func getSystemUptimeInMilliseconds() -> Int64","type":"func"},{"path":"\/documentation\/swiftio\/nothingorerrno(_:)","title":"func nothingOrErrno(CInt) -> Result<(), Errno>","type":"func"},{"path":"\/documentation\/swiftio\/sleep(ms:)","title":"func sleep(ms: Int)","type":"func"},{"path":"\/documentation\/swiftio\/valueorerrno(_:)","title":"func valueOrErrno(CInt) -> Result<Int, Errno>","type":"func"},{"path":"\/documentation\/swiftio\/valueorerrno(_:_:)","title":"func valueOrErrno<D>(D, CInt) -> Result<D, Errno>","type":"func"},{"path":"\/documentation\/swiftio\/wait(us:)","title":"func wait(us: Int)","type":"func"},{"path":"\/documentation\/swiftio\/yield()","title":"func yield()","type":"func"}],"path":"\/documentation\/swiftio","title":"SwiftIO","type":"module"}]},"schemaVersion":{"major":0,"minor":1,"patch":1}}