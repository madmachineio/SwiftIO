{"primaryContentSections":[{"kind":"content","content":[{"anchor":"Overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The SwiftIO abstracts low-level hardware stuffs. Hence you can program your board"},{"type":"text","text":" "},{"type":"text","text":"using simple APIs to access the specific function of the hardware."}]},{"type":"paragraph","inlineContent":[{"type":"image","identifier":"structure.png"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"This library has done all the necessary work to control your board. For all your"},{"type":"text","text":" "},{"type":"text","text":"projects, you can invoke the provided functions to get your board to work, and"},{"type":"text","text":" "},{"type":"text","text":"even create libraries based on it for future usage."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Besides, it isn’t specific to a certain type of board, that’s to say, it can"},{"type":"text","text":" "},{"type":"text","text":"work with all our boards. As for the board type, it is defined when you create"},{"type":"text","text":" "},{"type":"text","text":"projects."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For some more complicated functions, there are plenty of uncertainties due to"},{"type":"text","text":" "},{"type":"text","text":"all kinds of reasons (normally IO errors). So the library adopts error handling"},{"type":"text","text":" "},{"type":"text","text":"pattern. You can provide some solutions to deal with errors in advance."},{"type":"text","text":" "},{"type":"text","text":"But it comes at a cost: increased complexity of code to some extent."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Let’s start with a hello world project:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Import the SwiftIO to use the related board functions.","import SwiftIO","\/\/ Import the MadBoard to decide which pin is used for the specific function.","import MadBoard","","\/\/ Initialize the onboard blue LED to control it by setting output signal.","let led = DigitalOut(Id.BLUE)","​","while true {","    \/\/ Set a high voltage to turn off the onboard LED.","    \/\/ Please note that the onboard LED needs a low voltage to be turned on ","    \/\/ due to circuit connection.","    led.write(true)","    sleep(ms: 1000)","","    \/\/ Set a low voltage to turn on the onboard LED.","    led.write(false)","    sleep(ms: 1000)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"BTW, if you are new to electronics, there are some "},{"type":"reference","isActive":true,"identifier":"https:\/\/docs.madmachine.io\/tutorials\/overview"},{"type":"text","text":" for you to get started."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftio"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftIO\/documentation\/SwiftIO","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The SwiftIO library allows you to access and control the hardware in an easy way."}],"kind":"symbol","metadata":{"roleHeading":"Framework","externalID":"SwiftIO","title":"SwiftIO","symbolKind":"module","role":"collection","modules":[{"name":"SwiftIO"}]},"hierarchy":{"paths":[[]]},"topicSections":[{"title":"Classes","identifiers":["doc:\/\/SwiftIO\/documentation\/SwiftIO\/AnalogIn","doc:\/\/SwiftIO\/documentation\/SwiftIO\/Counter","doc:\/\/SwiftIO\/documentation\/SwiftIO\/DigitalIn","doc:\/\/SwiftIO\/documentation\/SwiftIO\/DigitalInOut","doc:\/\/SwiftIO\/documentation\/SwiftIO\/DigitalOut","doc:\/\/SwiftIO\/documentation\/SwiftIO\/Ethernet","doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C","doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2S","doc:\/\/SwiftIO\/documentation\/SwiftIO\/PWMOut","doc:\/\/SwiftIO\/documentation\/SwiftIO\/SPI","doc:\/\/SwiftIO\/documentation\/SwiftIO\/Timer","doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART"]},{"title":"Protocols","identifiers":["doc:\/\/SwiftIO\/documentation\/SwiftIO\/IdName"]},{"title":"Structures","identifiers":["doc:\/\/SwiftIO\/documentation\/SwiftIO\/Errno","doc:\/\/SwiftIO\/documentation\/SwiftIO\/FileDescriptor","doc:\/\/SwiftIO\/documentation\/SwiftIO\/MessageQueue","doc:\/\/SwiftIO\/documentation\/SwiftIO\/Mutex","doc:\/\/SwiftIO\/documentation\/SwiftIO\/Semaphore"]},{"title":"Functions","identifiers":["doc:\/\/SwiftIO\/documentation\/SwiftIO\/createThread(name:priority:stackSize:p1:p2:p3:_:)","doc:\/\/SwiftIO\/documentation\/SwiftIO\/cyclesToNanoseconds(start:stop:)","doc:\/\/SwiftIO\/documentation\/SwiftIO\/getClockCycle()","doc:\/\/SwiftIO\/documentation\/SwiftIO\/getSystemUptimeInMilliseconds()","doc:\/\/SwiftIO\/documentation\/SwiftIO\/nothingOrErrno(_:)","doc:\/\/SwiftIO\/documentation\/SwiftIO\/sleep(ms:)","doc:\/\/SwiftIO\/documentation\/SwiftIO\/valueOrErrno(_:)","doc:\/\/SwiftIO\/documentation\/SwiftIO\/valueOrErrno(_:_:)","doc:\/\/SwiftIO\/documentation\/SwiftIO\/wait(us:)","doc:\/\/SwiftIO\/documentation\/SwiftIO\/yield()"]}],"references":{"doc://SwiftIO/documentation/SwiftIO/yield()":{"role":"symbol","title":"yield()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"yield"},{"kind":"text","text":"()"}],"abstract":[],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/yield()","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/yield()"},"doc://SwiftIO/documentation/SwiftIO/FileDescriptor":{"role":"symbol","title":"FileDescriptor","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"FileDescriptor"}],"abstract":[{"type":"text","text":"The FileDescriptor struct is used to perform low-level file operations."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/FileDescriptor","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"FileDescriptor"}],"url":"\/documentation\/swiftio\/filedescriptor"},"doc://SwiftIO/documentation/SwiftIO/DigitalIn":{"role":"symbol","title":"DigitalIn","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DigitalIn"}],"abstract":[{"type":"text","text":"The DigitalIn class is intended to detect the state of a digital input pin,"},{"type":"text","text":" "},{"type":"text","text":"either true or false."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/DigitalIn","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DigitalIn"}],"url":"\/documentation\/swiftio\/digitalin"},"doc://SwiftIO/documentation/SwiftIO/IdName":{"role":"symbol","title":"IdName","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"IdName"}],"abstract":[{"type":"text","text":"The protocol for pin ids on your board."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/IdName","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"IdName"}],"url":"\/documentation\/swiftio\/idname"},"doc://SwiftIO/documentation/SwiftIO/Mutex":{"role":"symbol","title":"Mutex","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mutex"}],"abstract":[],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/Mutex","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Mutex"}],"url":"\/documentation\/swiftio\/mutex"},"doc://SwiftIO/documentation/SwiftIO/valueOrErrno(_:_:)":{"role":"symbol","title":"valueOrErrno(_:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"valueOrErrno"},{"kind":"text","text":"<"},{"kind":"genericParameter","text":"D"},{"kind":"text","text":">("},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"CInt","preciseIdentifier":"s:s4CInta"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"D"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Errno","preciseIdentifier":"s:7SwiftIO5ErrnoV"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/valueOrErrno(_:_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/valueorerrno(_:_:)"},"doc://SwiftIO/documentation/SwiftIO/getSystemUptimeInMilliseconds()":{"role":"symbol","title":"getSystemUptimeInMilliseconds()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getSystemUptimeInMilliseconds"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int64","preciseIdentifier":"s:s5Int64V"}],"abstract":[{"type":"text","text":"Gets the elapsed time in millisecond since the board powers up."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/getSystemUptimeInMilliseconds()","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/getsystemuptimeinmilliseconds()"},"doc://SwiftIO/documentation/SwiftIO/createThread(name:priority:stackSize:p1:p2:p3:_:)":{"role":"symbol","title":"createThread(name:priority:stackSize:p1:p2:p3:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"createThread"},{"kind":"text","text":"("},{"kind":"externalParam","text":"name"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":", "},{"kind":"externalParam","text":"priority"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"stackSize"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"p1"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"p2"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"p3"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawPointer","preciseIdentifier":"s:Sv"},{"kind":"text","text":"?, "},{"kind":"typeIdentifier","text":"swifthal_task","preciseIdentifier":"c:swift_os.h@T@swifthal_task"},{"kind":"text","text":")"}],"abstract":[],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/createThread(name:priority:stackSize:p1:p2:p3:_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/createthread(name:priority:stacksize:p1:p2:p3:_:)"},"doc://SwiftIO/documentation/SwiftIO/cyclesToNanoseconds(start:stop:)":{"role":"symbol","title":"cyclesToNanoseconds(start:stop:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"cyclesToNanoseconds"},{"kind":"text","text":"("},{"kind":"externalParam","text":"start"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":", "},{"kind":"externalParam","text":"stop"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Int64","preciseIdentifier":"s:s5Int64V"}],"abstract":[{"type":"text","text":"Converts the clock cycles into nanoseconds."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/cyclesToNanoseconds(start:stop:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/cyclestonanoseconds(start:stop:)"},"https://docs.madmachine.io/tutorials/overview":{"title":"tutorials","titleInlineContent":[{"type":"text","text":"tutorials"}],"type":"link","identifier":"https:\/\/docs.madmachine.io\/tutorials\/overview","url":"https:\/\/docs.madmachine.io\/tutorials\/overview"},"doc://SwiftIO/documentation/SwiftIO/Semaphore":{"role":"symbol","title":"Semaphore","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Semaphore"}],"abstract":[],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/Semaphore","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Semaphore"}],"url":"\/documentation\/swiftio\/semaphore"},"doc://SwiftIO/documentation/SwiftIO/getClockCycle()":{"role":"symbol","title":"getClockCycle()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getClockCycle"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"UInt","preciseIdentifier":"s:Su"}],"abstract":[{"type":"text","text":"Gets the current clock cycle of the low level 32bit timer."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/getClockCycle()","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/getclockcycle()"},"doc://SwiftIO/documentation/SwiftIO/valueOrErrno(_:)":{"role":"symbol","title":"valueOrErrno(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"valueOrErrno"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CInt","preciseIdentifier":"s:s4CInta"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Errno","preciseIdentifier":"s:7SwiftIO5ErrnoV"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/valueOrErrno(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/valueorerrno(_:)"},"doc://SwiftIO/documentation/SwiftIO/Errno":{"role":"symbol","title":"Errno","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"Errno"}],"abstract":[{"type":"text","text":"The Errno struct lists all the possible errors."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/Errno","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Errno"}],"url":"\/documentation\/swiftio\/errno"},"doc://SwiftIO/documentation/SwiftIO/I2C":{"role":"symbol","title":"I2C","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"I2C"}],"abstract":[{"type":"text","text":"Inter-Integrated Circuit, I2C (I squared C) for short, is a two wire protocol for"},{"type":"text","text":" "},{"type":"text","text":"short distance communication between different devices."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"I2C"}],"url":"\/documentation\/swiftio\/i2c"},"doc://SwiftIO/documentation/SwiftIO/DigitalOut":{"role":"symbol","title":"DigitalOut","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DigitalOut"}],"abstract":[{"type":"text","text":"The DigitalOut class configures a specified pin as a digital output pin and"},{"type":"text","text":" "},{"type":"text","text":"set its state (high or low output)."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/DigitalOut","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DigitalOut"}],"url":"\/documentation\/swiftio\/digitalout"},"doc://SwiftIO/documentation/SwiftIO/sleep(ms:)":{"role":"symbol","title":"sleep(ms:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"sleep"},{"kind":"text","text":"("},{"kind":"externalParam","text":"ms"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Suspends the processor’s work in a given time period"},{"type":"text","text":" "},{"type":"text","text":"(in millisecond)."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/sleep(ms:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/sleep(ms:)"},"doc://SwiftIO/documentation/SwiftIO/Timer":{"role":"symbol","title":"Timer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Timer"}],"abstract":[{"type":"text","text":"The Timer class can measure the time passed. If the time limit is reached, it"},{"type":"text","text":" "},{"type":"text","text":"can execute a specified task."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/Timer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Timer"}],"url":"\/documentation\/swiftio\/timer"},"structure.png":{"alt":"The structure of SwiftIO","type":"image","identifier":"structure.png","variants":[{"url":"\/images\/structure.png","traits":["1x","light"]}]},"doc://SwiftIO/documentation/SwiftIO/I2S":{"role":"symbol","title":"I2S","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"I2S"}],"abstract":[{"type":"text","text":"I2S (inter-integrated circuit sound) is a serial communication protocol"},{"type":"text","text":" "},{"type":"text","text":"that is designed specifically for digital audio data."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2S","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"I2S"}],"url":"\/documentation\/swiftio\/i2s"},"doc://SwiftIO/documentation/SwiftIO/UART":{"role":"symbol","title":"UART","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"UART"}],"abstract":[{"type":"text","text":"UART is a two-wire serial communication protocol used to communicate with"},{"type":"text","text":" "},{"type":"text","text":"serial devices. The devices must agree on a common transmisson rate before"},{"type":"text","text":" "},{"type":"text","text":"communication."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UART"}],"url":"\/documentation\/swiftio\/uart"},"doc://SwiftIO/documentation/SwiftIO/SPI":{"role":"symbol","title":"SPI","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"SPI"}],"abstract":[{"type":"text","text":"SPI is a four wire serial protocol for communication between devices."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/SPI","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"SPI"}],"url":"\/documentation\/swiftio\/spi"},"doc://SwiftIO/documentation/SwiftIO":{"role":"collection","title":"SwiftIO","abstract":[{"type":"text","text":"The SwiftIO library allows you to access and control the hardware in an easy way."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO","kind":"symbol","type":"topic","url":"\/documentation\/swiftio"},"doc://SwiftIO/documentation/SwiftIO/PWMOut":{"role":"symbol","title":"PWMOut","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"PWMOut"}],"abstract":[{"type":"text","text":"The PWMOut class is used to generate periodic square waves and modulate the pulse"},{"type":"text","text":" "},{"type":"text","text":"width to get different average output."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/PWMOut","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"PWMOut"}],"url":"\/documentation\/swiftio\/pwmout"},"doc://SwiftIO/documentation/SwiftIO/AnalogIn":{"role":"symbol","title":"AnalogIn","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"AnalogIn"}],"abstract":[{"type":"text","text":"The AnalogIn class reads external voltage from an analog input pin, which"},{"type":"text","text":" "},{"type":"text","text":"functions like a multimeter for measuring input values."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/AnalogIn","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"AnalogIn"}],"url":"\/documentation\/swiftio\/analogin"},"doc://SwiftIO/documentation/SwiftIO/Counter":{"role":"symbol","title":"Counter","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Counter"}],"abstract":[{"type":"text","text":"The Counter class is used to track the number of the clock ticks."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/Counter","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Counter"}],"url":"\/documentation\/swiftio\/counter"},"doc://SwiftIO/documentation/SwiftIO/Ethernet":{"role":"symbol","title":"Ethernet","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Ethernet"}],"abstract":[],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/Ethernet","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Ethernet"}],"url":"\/documentation\/swiftio\/ethernet"},"doc://SwiftIO/documentation/SwiftIO/nothingOrErrno(_:)":{"role":"symbol","title":"nothingOrErrno(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"nothingOrErrno"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"CInt","preciseIdentifier":"s:s4CInta"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<(), "},{"kind":"typeIdentifier","text":"Errno","preciseIdentifier":"s:7SwiftIO5ErrnoV"},{"kind":"text","text":">"}],"abstract":[],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/nothingOrErrno(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/nothingorerrno(_:)"},"doc://SwiftIO/documentation/SwiftIO/DigitalInOut":{"role":"symbol","title":"DigitalInOut","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"DigitalInOut"}],"abstract":[{"type":"text","text":"The DigitalInOut class allows you to set both input and output for a digital pin."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/DigitalInOut","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DigitalInOut"}],"url":"\/documentation\/swiftio\/digitalinout"},"doc://SwiftIO/documentation/SwiftIO/MessageQueue":{"role":"symbol","title":"MessageQueue","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"MessageQueue"}],"abstract":[],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/MessageQueue","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"MessageQueue"}],"url":"\/documentation\/swiftio\/messagequeue"},"doc://SwiftIO/documentation/SwiftIO/wait(us:)":{"role":"symbol","title":"wait(us:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"wait"},{"kind":"text","text":"("},{"kind":"externalParam","text":"us"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"When you invoke the wait function, the CPU keeps on checking if the time"},{"type":"text","text":" "},{"type":"text","text":"(in microsecond）is up. In addition, this function is more accurate than"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/sleep(ms:)"},{"type":"text","text":" function."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/wait(us:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/wait(us:)"}}}