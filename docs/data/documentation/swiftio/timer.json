{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Timer"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"It is actually a software timer. You need to initialize it at first."},{"type":"text","text":" "},{"type":"text","text":"It can operate as one-shot or periodic, with a customizable period."}]},{"type":"codeListing","syntax":"swift","code":["\/\/\/ Create a periodic timer whose period is 2000s.","let timer = Timer(period: 2000)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The timer can be really useful to carry out an operation after a speicified time"},{"type":"text","text":" "},{"type":"text","text":"using "},{"type":"reference","isActive":true,"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/Timer\/setInterrupt(start:_:)"},{"type":"text","text":". Here’a an example:"}]},{"anchor":"Example-Reverse-the-output-value-on-a-digital-output-pin","level":3,"type":"heading","text":"Example: Reverse the output value on a digital output pin"},{"type":"codeListing","syntax":"swift","code":["\/\/ Import the SwiftIO to use the related board functions.","import SwiftIO","\/\/ Import the MadBoard to decide which pin is used for the specific function.","import MadBoard","","\/\/ Initialize a timer with a default period 1000ms.","let timer = Timer()","\/\/ Initialize the onboard green LED.","let led = DigitalOut(Id.GREEN)","","\/\/ The setInterrupt function can be written as follow:","func toggleLed() {","   led.toggle()","}","timer.setInterrupt(toggleLed)","","while true {","   sleep(ms: 1000)","}"]},{"type":"paragraph","inlineContent":[{"type":"strong","inlineContent":[{"type":"text","text":"or"}]}]},{"type":"codeListing","syntax":"swift","code":["import SwiftIO","import MadBoard","","let timer = Timer()","let led = DigitalOut(Id.GREEN)","","\/\/ Set interrupt with a closure.","timer.setInterrupt() {","   led.toggle()","}","","while true {","   sleep(ms: 1000)","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftio\/timer"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/Timer","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"The Timer class can measure the time passed. If the time limit is reached, it"},{"type":"text","text":" "},{"type":"text","text":"can execute a specified task."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Timer"}],"title":"Timer","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:7SwiftIO5TimerC","modules":[{"name":"SwiftIO"}],"navigatorTitle":[{"kind":"identifier","text":"Timer"}]},"hierarchy":{"paths":[["doc:\/\/SwiftIO\/documentation\/SwiftIO"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/SwiftIO\/documentation\/SwiftIO\/Timer\/init(mode:period:)"]},{"title":"Instance Methods","identifiers":["doc:\/\/SwiftIO\/documentation\/SwiftIO\/Timer\/getRemaining()","doc:\/\/SwiftIO\/documentation\/SwiftIO\/Timer\/getStatus()","doc:\/\/SwiftIO\/documentation\/SwiftIO\/Timer\/setInterrupt(start:_:)","doc:\/\/SwiftIO\/documentation\/SwiftIO\/Timer\/start(mode:period:)","doc:\/\/SwiftIO\/documentation\/SwiftIO\/Timer\/stop()"]},{"title":"Enumerations","identifiers":["doc:\/\/SwiftIO\/documentation\/SwiftIO\/Timer\/Mode"]}],"references":{"doc://SwiftIO/documentation/SwiftIO/Timer/setInterrupt(start:_:)":{"role":"symbol","title":"setInterrupt(start:_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setInterrupt"},{"kind":"text","text":"("},{"kind":"externalParam","text":"start"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":", () -> "},{"kind":"typeIdentifier","text":"Void","preciseIdentifier":"s:s4Voida"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Executes a designated task at a scheduled time interval."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/Timer\/setInterrupt(start:_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/timer\/setinterrupt(start:_:)"},"doc://SwiftIO/documentation/SwiftIO/Timer/Mode":{"role":"symbol","title":"Timer.Mode","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Mode"}],"abstract":[{"type":"text","text":"There are two timer modes: "},{"type":"codeVoice","code":"oneShot"},{"type":"text","text":" means the timer works only once;"},{"type":"text","text":" "},{"type":"codeVoice","code":"period"},{"type":"text","text":" means the timer works periodically."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/Timer\/Mode","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Mode"}],"url":"\/documentation\/swiftio\/timer\/mode"},"doc://SwiftIO/documentation/SwiftIO/Timer/start(mode:period:)":{"role":"symbol","title":"start(mode:period:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"start"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timer","preciseIdentifier":"s:7SwiftIO5TimerC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Mode","preciseIdentifier":"s:7SwiftIO5TimerC4ModeO"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"period"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?)"}],"abstract":[{"type":"text","text":"Starts the timer and reset its status to zero."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/Timer\/start(mode:period:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/timer\/start(mode:period:)"},"doc://SwiftIO/documentation/SwiftIO/Timer/getRemaining()":{"role":"symbol","title":"getRemaining()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getRemaining"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"}],"abstract":[{"type":"text","text":"Computes the (approximate) time remaining before a running timer next expires."},{"type":"text","text":" "},{"type":"text","text":"If the timer is not running, it returns zero."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/Timer\/getRemaining()","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/timer\/getremaining()"},"doc://SwiftIO/documentation/SwiftIO/Timer/getStatus()":{"role":"symbol","title":"getStatus()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getStatus"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"UInt32","preciseIdentifier":"s:s6UInt32V"}],"abstract":[{"type":"text","text":"Gets the timer’s status which indicates how many times the timer has expired"},{"type":"text","text":" "},{"type":"text","text":"since it was last read. It will reset the status to zero."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/Timer\/getStatus()","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/timer\/getstatus()"},"doc://SwiftIO/documentation/SwiftIO/Timer/stop()":{"role":"symbol","title":"stop()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"stop"},{"kind":"text","text":"()"}],"abstract":[{"type":"text","text":"Stops the timer."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/Timer\/stop()","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/timer\/stop()"},"doc://SwiftIO/documentation/SwiftIO":{"role":"collection","title":"SwiftIO","abstract":[{"type":"text","text":"The SwiftIO library allows you to access and control the hardware in an easy way."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO","kind":"symbol","type":"topic","url":"\/documentation\/swiftio"},"doc://SwiftIO/documentation/SwiftIO/Timer":{"role":"symbol","title":"Timer","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"Timer"}],"abstract":[{"type":"text","text":"The Timer class can measure the time passed. If the time limit is reached, it"},{"type":"text","text":" "},{"type":"text","text":"can execute a specified task."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/Timer","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Timer"}],"url":"\/documentation\/swiftio\/timer"},"doc://SwiftIO/documentation/SwiftIO/Timer/init(mode:period:)":{"role":"symbol","title":"init(mode:period:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"mode"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Timer","preciseIdentifier":"s:7SwiftIO5TimerC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Mode","preciseIdentifier":"s:7SwiftIO5TimerC4ModeO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"period"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Initializes a timer."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/Timer\/init(mode:period:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/timer\/init(mode:period:)"}}}