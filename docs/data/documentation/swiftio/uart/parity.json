{"seeAlsoSections":[{"title":"Configuring UART","identifiers":["doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/setBaudRate(_:)","doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/getBaudRate()","doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/checkBufferReceived()","doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/clearBuffer()","doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/DataBits","doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/StopBits"],"generated":true}],"schemaVersion":{"major":0,"minor":3,"patch":0},"metadata":{"navigatorTitle":[{"kind":"identifier","text":"Parity"}],"role":"symbol","title":"UART.Parity","roleHeading":"Enumeration","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parity"}],"symbolKind":"enum","externalID":"s:7SwiftIO4UARTC6ParityO","extendedModule":"SwiftIO","modules":[{"name":"SwiftIO"}]},"abstract":[{"type":"text","text":"The parity bit used to verify if data has changed during transmission. It"},{"type":"text","text":" "},{"type":"text","text":"counts the number of logical-high bits and see if it equals an odd or even"},{"type":"text","text":" "},{"type":"text","text":"number."}],"sections":[],"identifier":{"url":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/Parity","interfaceLanguage":"swift"},"relationshipsSections":[{"identifiers":["doc:\/\/SwiftIO\/SQ","doc:\/\/SwiftIO\/SH"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"hierarchy":{"paths":[["doc:\/\/SwiftIO\/documentation\/SwiftIO","doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART"]]},"topicSections":[{"title":"Enumeration Cases","identifiers":["doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/Parity\/even","doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/Parity\/none","doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/Parity\/odd"]},{"title":"Default Implementations","identifiers":["doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/Parity\/Equatable-Implementations"],"generated":true}],"variants":[{"paths":["\/documentation\/swiftio\/uart\/parity"],"traits":[{"interfaceLanguage":"swift"}]}],"kind":"symbol","primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parity"}],"languages":["swift"],"platforms":["macOS"]}]}],"references":{"doc://SwiftIO/documentation/SwiftIO/UART/checkBufferReceived()":{"role":"symbol","title":"checkBufferReceived()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"checkBufferReceived"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the number of received data from the serial buffer."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/checkBufferReceived()","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/uart\/checkbufferreceived()"},"doc://SwiftIO/documentation/SwiftIO/UART/Parity/odd":{"role":"symbol","title":"UART.Parity.odd","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"odd"}],"abstract":[],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/Parity\/odd","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/uart\/parity\/odd"},"doc://SwiftIO/documentation/SwiftIO":{"role":"collection","title":"SwiftIO","abstract":[{"type":"text","text":"The SwiftIO library allows you to access and control the hardware in an easy way."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO","kind":"symbol","type":"topic","url":"\/documentation\/swiftio"},"doc://SwiftIO/documentation/SwiftIO/UART/DataBits":{"role":"symbol","title":"UART.DataBits","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataBits"}],"abstract":[{"type":"text","text":"The length of the data being transmitted."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/DataBits","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DataBits"}],"url":"\/documentation\/swiftio\/uart\/databits"},"doc://SwiftIO/documentation/SwiftIO/UART/Parity":{"role":"symbol","title":"UART.Parity","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parity"}],"abstract":[{"type":"text","text":"The parity bit used to verify if data has changed during transmission. It"},{"type":"text","text":" "},{"type":"text","text":"counts the number of logical-high bits and see if it equals an odd or even"},{"type":"text","text":" "},{"type":"text","text":"number."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/Parity","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parity"}],"url":"\/documentation\/swiftio\/uart\/parity"},"doc://SwiftIO/SH":{"type":"unresolvable","title":"Swift.Hashable","identifier":"doc:\/\/SwiftIO\/SH"},"doc://SwiftIO/SQ":{"type":"unresolvable","title":"Swift.Equatable","identifier":"doc:\/\/SwiftIO\/SQ"},"doc://SwiftIO/documentation/SwiftIO/UART/Parity/even":{"role":"symbol","title":"UART.Parity.even","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"even"}],"abstract":[],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/Parity\/even","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/uart\/parity\/even"},"doc://SwiftIO/documentation/SwiftIO/UART/Parity/none":{"role":"symbol","title":"UART.Parity.none","fragments":[{"kind":"keyword","text":"case"},{"kind":"text","text":" "},{"kind":"identifier","text":"none"}],"abstract":[],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/Parity\/none","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/uart\/parity\/none"},"doc://SwiftIO/documentation/SwiftIO/UART/StopBits":{"role":"symbol","title":"UART.StopBits","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"StopBits"}],"abstract":[{"type":"text","text":"One or two stops bits are reserved to end the communication."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/StopBits","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StopBits"}],"url":"\/documentation\/swiftio\/uart\/stopbits"},"doc://SwiftIO/documentation/SwiftIO/UART/setBaudRate(_:)":{"role":"symbol","title":"setBaudRate(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setBaudRate"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<(), "},{"kind":"typeIdentifier","text":"Errno","preciseIdentifier":"s:7SwiftIO5ErrnoV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Sets the baud rate for communication. It should be set ahead of time"},{"type":"text","text":" "},{"type":"text","text":"to ensure the same baud rate between devices."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/setBaudRate(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/uart\/setbaudrate(_:)"},"doc://SwiftIO/documentation/SwiftIO/UART":{"role":"symbol","title":"UART","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"UART"}],"abstract":[{"type":"text","text":"UART is a two-wire serial communication protocol used to communicate with"},{"type":"text","text":" "},{"type":"text","text":"serial devices. The devices must agree on a common transmisson rate before"},{"type":"text","text":" "},{"type":"text","text":"communication."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UART"}],"url":"\/documentation\/swiftio\/uart"},"doc://SwiftIO/documentation/SwiftIO/UART/Parity/Equatable-Implementations":{"role":"collectionGroup","title":"Equatable Implementations","abstract":[],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/Parity\/Equatable-Implementations","kind":"article","type":"topic","url":"\/documentation\/swiftio\/uart\/parity\/equatable-implementations"},"doc://SwiftIO/documentation/SwiftIO/UART/clearBuffer()":{"role":"symbol","title":"clearBuffer()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clearBuffer"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<(), "},{"kind":"typeIdentifier","text":"Errno","preciseIdentifier":"s:7SwiftIO5ErrnoV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Clears all bytes from the buffer to store the incoming data."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/clearBuffer()","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/uart\/clearbuffer()"},"doc://SwiftIO/documentation/SwiftIO/UART/getBaudRate()":{"role":"symbol","title":"getBaudRate()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getBaudRate"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Gets the current baud rate for serial communication."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/getBaudRate()","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/uart\/getbaudrate()"}}}