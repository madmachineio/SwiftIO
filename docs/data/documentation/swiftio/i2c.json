{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"I2C"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"overview","level":2,"type":"heading","text":"Overview"},{"type":"paragraph","inlineContent":[{"type":"text","text":"The I2C class allows you to read and write messages through I2C protocol."},{"type":"text","text":" "},{"type":"text","text":"The messages can be a single byte ("},{"type":"codeVoice","code":"UInt8"},{"type":"text","text":") or an array of bytes ("},{"type":"codeVoice","code":"[UInt8]"},{"type":"text","text":")."},{"type":"text","text":" "},{"type":"text","text":"Currently the I2C class only support master mode."}]},{"style":"note","content":[{"type":"paragraph","inlineContent":[{"type":"text","text":"Different I2C devices have different attributes. Please reference their"},{"type":"text","text":" "},{"type":"text","text":"device manual for detailed configuration."}]}],"type":"aside","name":"Note"},{"anchor":"Initialize-an-I2C-interface","level":3,"type":"heading","text":"Initialize an I2C interface:"},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, initialize the pin I2C0 for communication:"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Initialize an I2C interface with its speed set to standard (100Kbps).","let i2c = I2C(Id.I2C0)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each I2C interface consists of a SCL (serial clock) and SDA (serial data). So I2C0"},{"type":"text","text":" "},{"type":"text","text":"refers to the pin SCL0 and SDA0 on your board."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Besides, the supported clock speed for different devices may not be the same."},{"type":"text","text":" "},{"type":"text","text":"Make sure to configure it according to datasheet. By default, it is standard"},{"type":"text","text":" "},{"type":"text","text":"mode (100Kbps)."}]},{"anchor":"Read-or-write-data","level":3,"type":"heading","text":"Read or write data"},{"type":"paragraph","inlineContent":[{"type":"text","text":"After initializing an I2C instance, to read or write data, you still need the"},{"type":"text","text":" "},{"type":"text","text":"device adddress of the device for communication"}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"For example, to read a byte from a device:"}]},{"type":"codeListing","syntax":"swift","code":["var byte: UInt8 = 0","let address: UInt8 = 0x44","i2c.read(into: &byte, from: address)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The address is specific to the desired device. When multiple devices are connected,"},{"type":"text","text":" "},{"type":"text","text":"only the one with the matching address will respond. Each deviceâ€™s address is"},{"type":"text","text":" "},{"type":"text","text":"typically provided in its manual and set during the manufacturing process."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"The statements gets data from the device and replace the "},{"type":"codeVoice","code":"byte"},{"type":"text","text":" with the new"},{"type":"text","text":" "},{"type":"text","text":"data received."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If you want to write a byte to the device:"}]},{"type":"codeListing","syntax":"swift","code":["let value: UInt8 = 0x01","i2c.write(value, to: address)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"No matter how many data is sent or received, they are all in UInt8."}]},{"anchor":"Read-or-write-data-and-handle-error","level":3,"type":"heading","text":"Read or write data and handle error"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Indeed, communication can fail for various reasons, potentially leading to"},{"type":"text","text":" "},{"type":"text","text":"incorrect data. So methods related to reading or writing data will return"},{"type":"text","text":" "},{"type":"text","text":"results in a "},{"type":"codeVoice","code":"Result"},{"type":"text","text":" type. This allows you to handle errors and find"},{"type":"text","text":" "},{"type":"text","text":"alternative solutions."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Read a byte from the provided address and get the results.","let result = i2c.read(into: &byte, from: address)","","if case .failure(let err) = result {","    \/\/ If the communication fails, execute the specified task.","","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"If the data is successfully read, it is stored in "},{"type":"codeVoice","code":"byte"},{"type":"text","text":". If the communication"},{"type":"text","text":" "},{"type":"text","text":"fails, the "},{"type":"codeVoice","code":"byte"},{"type":"text","text":" may store a wrong value or remain unchanged, anyway, it is useless."},{"type":"text","text":" "},{"type":"text","text":"You can check the "},{"type":"codeVoice","code":"result"},{"type":"text","text":" to know what happens, and furthermore, handle the error."}]},{"anchor":"Example-1-Write-and-read-data-via-I2C-bus","level":3,"type":"heading","text":"Example 1: Write and read data via I2C bus"},{"type":"codeListing","syntax":"swift","code":["\/\/ Import the SwiftIO to use the related board functions.","import SwiftIO","\/\/ Import the MadBoard to decide which pin is used for the specific function.","import MadBoard","","\/\/ Initialize an I2C interface.","let i2c = I2C(Id.I2C0)","","\/\/ The address of the slave device.","let address = 0x44","","\/\/ Send data to the device.","var result = i2c.write([0x24, 0x0B], to: address)","if case .failure(let err) = result {","","}","","\/\/ Read data from the device and store them in the buffer.","var readBuffer = [UInt8](repeating: 0, count: 6)","result = i2c.read(into: &readBuffer, from: address)","if case .failure(let err) = result {","","}"]},{"anchor":"Example-2-Read-temperature-using-SHT3x-library","level":3,"type":"heading","text":"Example 2: Read temperature using SHT3x library"},{"type":"codeListing","syntax":"swift","code":["import SwiftIO","import MadBoard","\/\/ Import the device driver to communicate with the sensor with the provided functions.","import SHT3x","","\/\/ Initialize the I2C interface and use it to initialize the sensor.","let i2c = I2C(Id.I2C0)","let sht = SHT3x(i2c)","","\/\/ Read the temperature and humidity and print their values out.","\/\/ Stop for 1s and repeat it.","while true {","    let temp = sht.readCelsius()","    print(\"Temperature: \\(temp)C\")","    sleep(ms: 1000)","}"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"In this example, you can talk to the sensor without caring about the details"},{"type":"text","text":" "},{"type":"text","text":"of I2C communication as Example 1. The library "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/madmachineio\/MadDrivers\/blob\/main\/Sources\/SHT3x\/SHT3x.swift"},{"type":"text","text":" "},{"type":"text","text":"has configured the sensor by sending and receiving data via I2C bus."},{"type":"text","text":" "},{"type":"text","text":"Therefore, you can directly read temperature using the predefined APIs."}]},{"type":"paragraph","inlineContent":[{"type":"text","text":"BTW, you can find more drivers for different devices in"},{"type":"text","text":" "},{"type":"reference","isActive":true,"identifier":"https:\/\/github.com\/madmachineio\/MadDrivers"},{"type":"text","text":"."}]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftio\/i2c"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"Inter-Integrated Circuit, I2C (I squared C) for short, is a two wire protocol for"},{"type":"text","text":" "},{"type":"text","text":"short distance communication between different devices."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"I2C"}],"title":"I2C","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:7SwiftIO3I2CC","modules":[{"name":"SwiftIO"}],"navigatorTitle":[{"kind":"identifier","text":"I2C"}]},"hierarchy":{"paths":[["doc:\/\/SwiftIO\/documentation\/SwiftIO"]]},"topicSections":[{"title":"Initializer","identifiers":["doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C\/init(_:speed:)"]},{"title":"Reading data","identifiers":["doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C\/read(into:from:)","doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C\/read(into:count:from:)"]},{"title":"Writing data","identifiers":["doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C\/write(_:to:)","doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C\/write(_:count:to:)"]},{"title":"Writing and reading data","identifiers":["doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C\/writeRead(_:into:address:)","doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C\/writeRead(_:into:readCount:address:)","doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C\/writeRead(_:writeCount:into:readCount:address:)"]},{"title":"Setting speed","identifiers":["doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C\/setSpeed(_:)","doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C\/getSpeed()","doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C\/Speed"]}],"references":{"doc://SwiftIO/documentation/SwiftIO/I2C/setSpeed(_:)":{"role":"symbol","title":"setSpeed(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setSpeed"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"I2C","preciseIdentifier":"s:7SwiftIO3I2CC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Speed","preciseIdentifier":"s:7SwiftIO3I2CC5SpeedO"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<(), "},{"kind":"typeIdentifier","text":"Errno","preciseIdentifier":"s:7SwiftIO5ErrnoV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Changes the clock speed over I2C bus."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C\/setSpeed(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/i2c\/setspeed(_:)"},"doc://SwiftIO/documentation/SwiftIO/I2C/write(_:to:)":{"role":"symbol","title":"write(_:to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<(), "},{"kind":"typeIdentifier","text":"Errno","preciseIdentifier":"s:7SwiftIO5ErrnoV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Writes a UInt8 to the specified slave device with the given address."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C\/write(_:to:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/i2c\/write(_:to:)"},"doc://SwiftIO/documentation/SwiftIO/I2C/Speed":{"role":"symbol","title":"I2C.Speed","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Speed"}],"abstract":[{"type":"text","text":"The clock speed used to synchronize the data transmission between devices."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C\/Speed","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Speed"}],"url":"\/documentation\/swiftio\/i2c\/speed"},"doc://SwiftIO/documentation/SwiftIO/I2C/getSpeed()":{"role":"symbol","title":"getSpeed()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getSpeed"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"I2C","preciseIdentifier":"s:7SwiftIO3I2CC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Speed","preciseIdentifier":"s:7SwiftIO3I2CC5SpeedO"}],"abstract":[{"type":"text","text":"Gets the current clock speed of the data transmission."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C\/getSpeed()","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/i2c\/getspeed()"},"doc://SwiftIO/documentation/SwiftIO/I2C/writeRead(_:writeCount:into:readCount:address:)":{"role":"symbol","title":"writeRead(_:writeCount:into:readCount:address:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeRead"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"writeCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"readCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"address"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<(), "},{"kind":"typeIdentifier","text":"Errno","preciseIdentifier":"s:7SwiftIO5ErrnoV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Writes an array of UInt8 to the slave device with the given address and"},{"type":"text","text":" "},{"type":"text","text":"then read bytes from it."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C\/writeRead(_:writeCount:into:readCount:address:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/i2c\/writeread(_:writecount:into:readcount:address:)"},"doc://SwiftIO/documentation/SwiftIO/I2C/writeRead(_:into:address:)":{"role":"symbol","title":"writeRead(_:into:address:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeRead"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"address"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<(), "},{"kind":"typeIdentifier","text":"Errno","preciseIdentifier":"s:7SwiftIO5ErrnoV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Writes a UInt8 to the specified slave device with the given address and"},{"type":"text","text":" "},{"type":"text","text":"then read a UInt8 from it."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C\/writeRead(_:into:address:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/i2c\/writeread(_:into:address:)"},"https://github.com/madmachineio/MadDrivers":{"title":"MadDrivers","titleInlineContent":[{"type":"text","text":"MadDrivers"}],"type":"link","identifier":"https:\/\/github.com\/madmachineio\/MadDrivers","url":"https:\/\/github.com\/madmachineio\/MadDrivers"},"doc://SwiftIO/documentation/SwiftIO/I2C/init(_:speed:)":{"role":"symbol","title":"init(_:speed:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"IdName","preciseIdentifier":"s:7SwiftIO6IdNameP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"speed"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"I2C","preciseIdentifier":"s:7SwiftIO3I2CC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Speed","preciseIdentifier":"s:7SwiftIO3I2CC5SpeedO"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Initializes a specific I2C interface with specified speed."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C\/init(_:speed:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/i2c\/init(_:speed:)"},"doc://SwiftIO/documentation/SwiftIO/I2C/read(into:count:from:)":{"role":"symbol","title":"read(into:count:from:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<(), "},{"kind":"typeIdentifier","text":"Errno","preciseIdentifier":"s:7SwiftIO5ErrnoV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Reads bytes from the specified slave device with the given address and"},{"type":"text","text":" "},{"type":"text","text":"store them in the buffer."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C\/read(into:count:from:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/i2c\/read(into:count:from:)"},"doc://SwiftIO/documentation/SwiftIO/I2C/read(into:from:)":{"role":"symbol","title":"read(into:from:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<(), "},{"kind":"typeIdentifier","text":"Errno","preciseIdentifier":"s:7SwiftIO5ErrnoV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Reads a byte from the specified slave device with the given address."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C\/read(into:from:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/i2c\/read(into:from:)"},"doc://SwiftIO/documentation/SwiftIO":{"role":"collection","title":"SwiftIO","abstract":[{"type":"text","text":"The SwiftIO library allows you to access and control the hardware in an easy way."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO","kind":"symbol","type":"topic","url":"\/documentation\/swiftio"},"https://github.com/madmachineio/MadDrivers/blob/main/Sources/SHT3x/SHT3x.swift":{"title":"SHT3x","titleInlineContent":[{"type":"text","text":"SHT3x"}],"type":"link","identifier":"https:\/\/github.com\/madmachineio\/MadDrivers\/blob\/main\/Sources\/SHT3x\/SHT3x.swift","url":"https:\/\/github.com\/madmachineio\/MadDrivers\/blob\/main\/Sources\/SHT3x\/SHT3x.swift"},"doc://SwiftIO/documentation/SwiftIO/I2C/write(_:count:to:)":{"role":"symbol","title":"write(_:count:to:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"to"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<(), "},{"kind":"typeIdentifier","text":"Errno","preciseIdentifier":"s:7SwiftIO5ErrnoV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Writes an array of UInt8 to the specified slave device with the given address."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C\/write(_:count:to:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/i2c\/write(_:count:to:)"},"doc://SwiftIO/documentation/SwiftIO/I2C":{"role":"symbol","title":"I2C","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"I2C"}],"abstract":[{"type":"text","text":"Inter-Integrated Circuit, I2C (I squared C) for short, is a two wire protocol for"},{"type":"text","text":" "},{"type":"text","text":"short distance communication between different devices."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"I2C"}],"url":"\/documentation\/swiftio\/i2c"},"doc://SwiftIO/documentation/SwiftIO/I2C/writeRead(_:into:readCount:address:)":{"role":"symbol","title":"writeRead(_:into:readCount:address:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"writeRead"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"readCount"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"address"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<(), "},{"kind":"typeIdentifier","text":"Errno","preciseIdentifier":"s:7SwiftIO5ErrnoV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Writes a UInt8 to the specified slave device with the given address and"},{"type":"text","text":" "},{"type":"text","text":"then read bytes from it."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/I2C\/writeRead(_:into:readCount:address:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/i2c\/writeread(_:into:readcount:address:)"}}}