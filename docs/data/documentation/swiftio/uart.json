{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"final"},{"kind":"text","text":" "},{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"UART"}],"languages":["swift"],"platforms":["macOS"]}]},{"kind":"content","content":[{"anchor":"Initialize-a-UART-port","level":3,"type":"heading","text":"Initialize a UART port"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To initialize a UART pin, you can simply specify the id. The other parameters"},{"type":"text","text":" "},{"type":"text","text":"have their default value to set the UART communication."}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Initialize a UART interface UART0.","let uart = UART(Id.UART0)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"Each UART port needs a TX (transmitter) and a RX (receiver) line. UART0 refers"},{"type":"text","text":" "},{"type":"text","text":"to the pins TX0 and RX0 on your board. The TX0 line should connects to the RX of the"},{"type":"text","text":" "},{"type":"text","text":"external device and RX0 to TX of the device."}]},{"anchor":"Read-or-write-data","level":3,"type":"heading","text":"Read or write data"},{"type":"paragraph","inlineContent":[{"type":"text","text":"To write data to a UART device,"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Write a UInt8 to the external device.","let data: UInt8 = 0x01","uart.write(byte)"]},{"type":"paragraph","inlineContent":[{"type":"text","text":"To read data from a UART device,"}]},{"type":"codeListing","syntax":"swift","code":["\/\/ Read a byte from the external device and store it.","var byte: UInt8 = 0","uart.read(into: &byte)"]},{"anchor":"Read-or-write-data-and-handle-error","level":3,"type":"heading","text":"Read or write data and handle error"},{"type":"paragraph","inlineContent":[{"type":"text","text":"Indeed, communication can fail for various reasons, potentially leading to"},{"type":"text","text":" "},{"type":"text","text":"incorrect data. Besides, the wait time may not be enough to receive data and thus"},{"type":"text","text":" "},{"type":"text","text":"you donâ€™t get all needed data. So methods related to reading or writing data"},{"type":"text","text":" "},{"type":"text","text":"will return results in a Result type. This allows you to handle errors and find"},{"type":"text","text":" "},{"type":"text","text":"alternative solutions."}]},{"type":"codeListing","syntax":"swift","code":["let result = uart.read(into: &byte)","switch result {","case .success(let count):","    \/\/ Know if you have received enough data.","","case .failure(let error):","    \/\/ If an error happens, execute the specified task.","","}"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/swiftio\/uart"],"traits":[{"interfaceLanguage":"swift"}]}],"identifier":{"url":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"UART is a two-wire serial communication protocol used to communicate with"},{"type":"text","text":" "},{"type":"text","text":"serial devices. The devices must agree on a common transmisson rate before"},{"type":"text","text":" "},{"type":"text","text":"communication."}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"UART"}],"title":"UART","roleHeading":"Class","role":"symbol","symbolKind":"class","externalID":"s:7SwiftIO4UARTC","modules":[{"name":"SwiftIO"}],"navigatorTitle":[{"kind":"identifier","text":"UART"}]},"hierarchy":{"paths":[["doc:\/\/SwiftIO\/documentation\/SwiftIO"]]},"topicSections":[{"title":"Initializer","identifiers":["doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/init(_:baudRate:parity:stopBits:dataBits:readBufferLength:)"]},{"title":"Reading data","identifiers":["doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/read(into:timeout:)","doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/read(into:count:timeout:)-8km7p","doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/read(into:count:timeout:)-2z2uc"]},{"title":"Writing data","identifiers":["doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/write(_:)-6brso","doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/write(_:)-97rer","doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/write(_:count:)-7uzjn","doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/write(_:count:)-4fol4"]},{"title":"Configuring UART","identifiers":["doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/setBaudRate(_:)","doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/getBaudRate()","doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/checkBufferReceived()","doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/clearBuffer()","doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/DataBits","doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/Parity","doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/StopBits"]}],"references":{"doc://SwiftIO/documentation/SwiftIO/UART":{"role":"symbol","title":"UART","fragments":[{"kind":"keyword","text":"class"},{"kind":"text","text":" "},{"kind":"identifier","text":"UART"}],"abstract":[{"type":"text","text":"UART is a two-wire serial communication protocol used to communicate with"},{"type":"text","text":" "},{"type":"text","text":"serial devices. The devices must agree on a common transmisson rate before"},{"type":"text","text":" "},{"type":"text","text":"communication."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"UART"}],"url":"\/documentation\/swiftio\/uart"},"doc://SwiftIO/documentation/SwiftIO/UART/DataBits":{"role":"symbol","title":"UART.DataBits","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"DataBits"}],"abstract":[{"type":"text","text":"The length of the data being transmitted."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/DataBits","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"DataBits"}],"url":"\/documentation\/swiftio\/uart\/databits"},"doc://SwiftIO/documentation/SwiftIO/UART/clearBuffer()":{"role":"symbol","title":"clearBuffer()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"clearBuffer"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<(), "},{"kind":"typeIdentifier","text":"Errno","preciseIdentifier":"s:7SwiftIO5ErrnoV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Clears all bytes from the buffer to store the incoming data."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/clearBuffer()","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/uart\/clearbuffer()"},"doc://SwiftIO/documentation/SwiftIO/UART/read(into:timeout:)":{"role":"symbol","title":"read(into:timeout:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" "},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":", "},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Errno","preciseIdentifier":"s:7SwiftIO5ErrnoV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Reads a byte from the external device."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/read(into:timeout:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/uart\/read(into:timeout:)"},"doc://SwiftIO/documentation/SwiftIO/UART/getBaudRate()":{"role":"symbol","title":"getBaudRate()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"getBaudRate"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Gets the current baud rate for serial communication."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/getBaudRate()","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/uart\/getbaudrate()"},"doc://SwiftIO/documentation/SwiftIO/UART/read(into:count:timeout:)-2z2uc":{"role":"symbol","title":"read(into:count:timeout:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UnsafeMutableRawBufferPointer","preciseIdentifier":"s:Sw"},{"kind":"text","text":", "},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Errno","preciseIdentifier":"s:7SwiftIO5ErrnoV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Reads a specified amount of bytes from the external device into the buffer"},{"type":"text","text":" "},{"type":"text","text":"pointer."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/read(into:count:timeout:)-2z2uc","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/uart\/read(into:count:timeout:)-2z2uc"},"doc://SwiftIO/documentation/SwiftIO/UART/setBaudRate(_:)":{"role":"symbol","title":"setBaudRate(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"setBaudRate"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<(), "},{"kind":"typeIdentifier","text":"Errno","preciseIdentifier":"s:7SwiftIO5ErrnoV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Sets the baud rate for communication. It should be set ahead of time"},{"type":"text","text":" "},{"type":"text","text":"to ensure the same baud rate between devices."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/setBaudRate(_:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/uart\/setbaudrate(_:)"},"doc://SwiftIO/documentation/SwiftIO/UART/read(into:count:timeout:)-8km7p":{"role":"symbol","title":"read(into:count:timeout:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"read"},{"kind":"text","text":"("},{"kind":"externalParam","text":"into"},{"kind":"text","text":": "},{"kind":"keyword","text":"inout"},{"kind":"text","text":" ["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?, "},{"kind":"externalParam","text":"timeout"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<"},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"typeIdentifier","text":"Errno","preciseIdentifier":"s:7SwiftIO5ErrnoV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Reads a specified amount of bytes from the external device."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/read(into:count:timeout:)-8km7p","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/uart\/read(into:count:timeout:)-8km7p"},"doc://SwiftIO/documentation/SwiftIO/UART/write(_:)-97rer":{"role":"symbol","title":"write(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<(), "},{"kind":"typeIdentifier","text":"Errno","preciseIdentifier":"s:7SwiftIO5ErrnoV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Writes a string to the external device through the serial connection."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/write(_:)-97rer","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/uart\/write(_:)-97rer"},"doc://SwiftIO/documentation/SwiftIO/UART/Parity":{"role":"symbol","title":"UART.Parity","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"Parity"}],"abstract":[{"type":"text","text":"The parity bit used to verify if data has changed during transmission. It"},{"type":"text","text":" "},{"type":"text","text":"counts the number of logical-high bits and see if it equals an odd or even"},{"type":"text","text":" "},{"type":"text","text":"number."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/Parity","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"Parity"}],"url":"\/documentation\/swiftio\/uart\/parity"},"doc://SwiftIO/documentation/SwiftIO":{"role":"collection","title":"SwiftIO","abstract":[{"type":"text","text":"The SwiftIO library allows you to access and control the hardware in an easy way."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO","kind":"symbol","type":"topic","url":"\/documentation\/swiftio"},"doc://SwiftIO/documentation/SwiftIO/UART/write(_:count:)-4fol4":{"role":"symbol","title":"write(_:count:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UnsafeRawBufferPointer","preciseIdentifier":"s:SW"},{"kind":"text","text":", "},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<(), "},{"kind":"typeIdentifier","text":"Errno","preciseIdentifier":"s:7SwiftIO5ErrnoV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Writes buffer pointer of the data in the underlying storage to the external device."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/write(_:count:)-4fol4","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/uart\/write(_:count:)-4fol4"},"doc://SwiftIO/documentation/SwiftIO/UART/init(_:baudRate:parity:stopBits:dataBits:readBufferLength:)":{"role":"symbol","title":"init(_:baudRate:parity:stopBits:dataBits:readBufferLength:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"IdName","preciseIdentifier":"s:7SwiftIO6IdNameP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"baudRate"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":", "},{"kind":"externalParam","text":"parity"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UART","preciseIdentifier":"s:7SwiftIO4UARTC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"Parity","preciseIdentifier":"s:7SwiftIO4UARTC6ParityO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"stopBits"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UART","preciseIdentifier":"s:7SwiftIO4UARTC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"StopBits","preciseIdentifier":"s:7SwiftIO4UARTC8StopBitsO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"dataBits"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"UART","preciseIdentifier":"s:7SwiftIO4UARTC"},{"kind":"text","text":"."},{"kind":"typeIdentifier","text":"DataBits","preciseIdentifier":"s:7SwiftIO4UARTC8DataBitsO"},{"kind":"text","text":", "},{"kind":"externalParam","text":"readBufferLength"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"Initializes an interface for UART communication."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/init(_:baudRate:parity:stopBits:dataBits:readBufferLength:)","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/uart\/init(_:baudrate:parity:stopbits:databits:readbufferlength:)"},"doc://SwiftIO/documentation/SwiftIO/UART/write(_:)-6brso":{"role":"symbol","title":"write(_:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":") -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<(), "},{"kind":"typeIdentifier","text":"Errno","preciseIdentifier":"s:7SwiftIO5ErrnoV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Writes a byte to the external device through the serial connection."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/write(_:)-6brso","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/uart\/write(_:)-6brso"},"doc://SwiftIO/documentation/SwiftIO/UART/checkBufferReceived()":{"role":"symbol","title":"checkBufferReceived()","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"checkBufferReceived"},{"kind":"text","text":"() -> "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"}],"abstract":[{"type":"text","text":"Returns the number of received data from the serial buffer."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/checkBufferReceived()","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/uart\/checkbufferreceived()"},"doc://SwiftIO/documentation/SwiftIO/UART/StopBits":{"role":"symbol","title":"UART.StopBits","fragments":[{"kind":"keyword","text":"enum"},{"kind":"text","text":" "},{"kind":"identifier","text":"StopBits"}],"abstract":[{"type":"text","text":"One or two stops bits are reserved to end the communication."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/StopBits","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"StopBits"}],"url":"\/documentation\/swiftio\/uart\/stopbits"},"doc://SwiftIO/documentation/SwiftIO/UART/write(_:count:)-7uzjn":{"role":"symbol","title":"write(_:count:)","fragments":[{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"write"},{"kind":"text","text":"(["},{"kind":"typeIdentifier","text":"UInt8","preciseIdentifier":"s:s5UInt8V"},{"kind":"text","text":"], "},{"kind":"externalParam","text":"count"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Int","preciseIdentifier":"s:Si"},{"kind":"text","text":"?) -> "},{"kind":"typeIdentifier","text":"Result","preciseIdentifier":"s:s6ResultO"},{"kind":"text","text":"<(), "},{"kind":"typeIdentifier","text":"Errno","preciseIdentifier":"s:7SwiftIO5ErrnoV"},{"kind":"text","text":">"}],"abstract":[{"type":"text","text":"Writes a series of bytes to the external device through the serial connection."}],"identifier":"doc:\/\/SwiftIO\/documentation\/SwiftIO\/UART\/write(_:count:)-7uzjn","kind":"symbol","type":"topic","url":"\/documentation\/swiftio\/uart\/write(_:count:)-7uzjn"}}}